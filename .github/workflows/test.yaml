name: Test Actions
on: 
  push:
  workflow_dispatch:
    inputs:
      server_name:
        description: The server where you wish to deploy & test your code.
        required: true
        type: choice
        options:
        - server_1
        - server_2
        - server_3

env:
  #STACK_PREFIX: 'dka'
  #STACK: 'ecs'
  ECS_DEPLOYMENT: 'blue'
  ECS_LIVE_STACK: 'blue'
  STACK_PROFILE: 'default'
  ACCOUNT: 'sp-dev'
  DOCKER_TAG: '123456789-docker'
  DEPLOY_EXCLUSIVE: true
  SKIP_CDK_DIFF: true
  BRANCH: 'develop'
  STACK_PREFIX: ''
  STACK_DEPLOYMENT: true
  EXCLUSIVE_DEPLOYMENT: false
  STACK: 'api'
  API_DOCKER_IMAGE_TAG: 'feature-gf-1115-fix-gms-error-alarm-api-3'
  STREAMING_DOCKER_IMAGE_TAG: 'develop-streaming-213'
  LOG_LEVEL: 'INFO'
  CR_NUMBER: 'CR1234567890'
  
jobs:
  print-varable:
    runs-on: ubuntu-latest
    steps:
      - name: Set Stack Parameters
        run: |
          stackPrefixContext=$([ -z "${{ env.STACK_PREFIX }}" ] && echo "-c stackPrefix=${{ env.STACK_PREFIX }} " || echo "")
          stackName="generosity-merchandising-${{ env.ACCOUNT }}-${{ env.STACK }}"
          
          stackPrefix=$([ -z "${{ needs.pre-deploy.output.STACK_PREFIX_LC }}" ] && echo "${{ needs.pre-deploy.output.STACK_PREFIX_LC }}-" || echo "")
          echo "fullStackName=${stackPrefix}${stackName}" >> $GITHUB_ENV
          if [[ '${{ env.STACK }}' = 'api' ]]; then
              echo "stackPrefixContext=${stackPrefixContext}-c apidockerimagetag=${{ env.API_DOCKER_IMAGE_TAG }} -c loglevel=${{ env.LOG_LEVEL }}"  >> $GITHUB_ENV
          elif [[ '${{ env.STACK }}' = 'streaming' ]]; then
              echo "stackPrefixContext=${stackPrefixContext}-c streamingdockerimagetag=${{ env.STREAMING_DOCKER_IMAGE_TAG }} -c loglevel=${{ env.LOG_LEVEL }}"  >> $GITHUB_ENV
          else  
              echo "stackPrefixContext=${stackPrefixContext}-c apidockerimagetag=${{ env.API_DOCKER_IMAGE_TAG }} -c streamingdockerimagetag=${{ env.STREAMING_DOCKER_IMAGE_TAG }} -c loglevel=${{ env.LOG_LEVEL }}"  >> $GITHUB_ENV
          fi
          
          
          
  pre-deploy:
    runs-on: ubuntu-latest
    if: false
    outputs:
      STACK_PREFIX_LC: ${{ steps.stack-prefix.outputs.STACK_PREFIX_LC }}
    steps:
      - id: stack-prefix
        run: |
         sp=${{ env.STACK_PREFIX }}
         myValue='URL===> '
         echo "STACK_PREFIX_LC=${sp,,}" >> $GITHUB_OUTPUT
         echo "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
         echo "Repo: ${{ github.repository }}"
         echo "actor: ${{ github.actor  }}"
         echo "myValue=${{ github.repository }}-${{ github.actor  }}" >> $GITHUB_ENV

      - run: |
          echo "myValue: ${{ env.myValue }}"

      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: master
          
      - name: Change to working director
        run: |
          pwd
          ls -lart
          cat my-file.txt
    
  test-workflows:
    runs-on: ubuntu-latest
    if: false
    needs: pre-deploy
    steps:
      - run: |
            stackPrefixValue="${{ needs.pre-deploy.output.STACK_PREFIX_LC }}"
            stackPrefix=$([ stackPrefixValue != "" ] && echo "${stackPrefixValue}-" || echo "")
            echo "stackPrefix: ${stackPrefix}"
            #stackName=$([ env.STACK == "ecs" || env.STACK == "dashboard" ] && echo "${{ env.STACK }}-${{ env.ECS_DEPLOYMENT }}" || echo "${{ env.STACK }}")
            #echo "stackName=${stackPrefix}${stackName}"  >> $GITHUB_ENV
            #stackPrefixCdk=$([ stackPrefixLowerCase != "" ] && echo "-c stackPrefix=${stackPrefixLowerCase} " || echo "")
            #stackPrefixCdkContext="-c stackProfile=${{ env.STACK_PROFILE }} -c dockerimagetag=${{ env.DOCKER_TAG }} -c ecscolour=${{ env.ECS_DEPLOYMENT }} -c ecslive=${{ env.ECS_LIVE_STACK }}"
            #echo "stackPrefixCdkContext=${stackPrefixCdk}${stackPrefixCdkContext}"  >> $GITHUB_ENV
            #echo "exclusive=${{ (env.DEPLOY_EXCLUSIVE) && '--exclusively' || '' }}" >> $GITHUB_ENV
            #echo "force=${{ (env.SKIP_CDK_DIFF) && '--force' || '' }}" >> $GITHUB_ENV
            #echo "stackPrefixLowerCase: ${stackPrefixLowerCase}"
            echo "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            
            
      - run: |
          echo "yarn cdk diff --fail tokeniser-api-cdk-${{ env.ACCOUNT }}-${{ env.stackName }} ${{ env.stackPrefixCdkContext }} ${{ env.scalingProfile }} -c dockerTag=${{ env.DOCKER_TAG }} ${{ env.exclusive }}"
        
